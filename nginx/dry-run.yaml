---
# Source: nginx/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: isnginx-tls
  labels:
    helm.sh/chart: nginx-0.1.0# Source: nginx/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: isnginx-tls
  labels:
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt: |
    ideascale.me.crt: 
  tls.key: |
    ideascale.me.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREl5c0c4T21vd1NQZjMKNU5KMmVXanJyM1BCOGhJYTNSYjdrU3RNUDhMWDFTUE1KbDk3bk1CMGdJWUh4MkNzVlA3cm5Oa2ZQNWRBdHZCOApHcTgzNWRkbDExci9mbHNTVkxMb3kxdktJNnB4S0RsZFpTWDBPby9GSHcyK3dFbkZhbEx6QjJwaDF2cXdBbDZVCmpjdGY5R29SemlPbUt1bzh0TTIzdHQrYlZQRnNvdGM4L05zNEFFbzZWNFFyNmYraG94RmlBRjV3RWlnSDFJQ0EKeU56d0xWcndLTHVmbkVKTlIvQ3FXK2RpZkM2MXlDZVBRVTJsTUt1ajhudGRlSUh2UWYwa1JiZ29yNmNGOFd6cwp4OW9NOVU5aGtMeTVudkE5a2pGMmNNcXorWnB6Yk5uOHJINGV4T0RwemVOYTRQZ1B0WC9KVldSRkNncnYwdmc4CldDNHhQNzZ0QWdNQkFBRUNnZ0VBQVRvZitmYi9iQ0VlQnRGS3FmZXUrUFcvQnRua1cyNnJjOGtjMHgvMm9Gd0kKbG5oTGtCVlNwY09kVGhIZFdPQkNHSTJDVkNzTzBSSHRJVTBHY2hpQSt2blljQVJGS1RVRVRPRGxSRFI0bDYxdgp3RTdjYndRbW1jVkpUN2VjRzgwOUNZZ3JrY0ovRUxGTEE2eGtLRWQxbUh0Q2c0THlvSUZZV24yUEcwTm5JRXRSCnNFRTZ0YStjMHc0QkFlZ2dnb0toUmhqL2d1clRXMXhBVXhQS0FjWjczN3JYZHpDTGx3N1Y0KzlnUEg2b1UvenAKay9XdGNTRGhoZU1zZlJTTk10cWIvZUx6SnZJSk14b0dHbmFYUVJHeGhGUXZXbTR0Z1ZXNFFlVTU0K1lpeCtjagpJbnpySXBSWXlaTWs3Z2JzRjQzZ3JiMnZTbjNpL0JhcFE5RlFXdmFZTHdLQmdRRHRmNzMrdklkS0FQanByeXl6CkxFQmNmY0x2Mnp6ZVlGRWNsb3ExMDZkVDRMN1pJbkhOU1Vhb256L2RpN2RvcXpUM3RoM285WitaN2lhdDhtM3UKYVd0VEgybGkyTU10UHJXQ3Q1TmgyUHpieiszK24xM3NpSjVsbDMxWVhBTTRZK0RxK2FpYTdMbFYxd3d4NmpNbQozUDNPQ25HS05NNlpOQWRsQUgzOUlJWTZNd0tCZ1FEWWJ2NzJ2bUg3cEl1Z25lUlg0RnpGcjFVRFAreHhmRXhOCkEyc3BvSVpBYzZGZXl5UTB0Y0FkcnVUMUpjY2Z3WTFrV0MwTFVsdEhqUlRBSnZEVWRrMEQxRkdhRjkrWlZLeWEKVU9MVkdzRnMxOUdiZ3hBb0loeWxjZnBMbDR2WFZGQWs4YmtGdHJEY254cmIxbWdSYys5NXZXRWRZdVVxekZJNApleFUxQ3dFRG53S0JnRkQzQ1loOE1RcnpoZWYwaGlLVzVXSWlwWUFybDNhZ0UwYlJzM3dGS2JnWW1EZGgzTFlGClV3ZE5NdktPSFBxYjB6VFhheDd1RFhqbWpWMGpsb0orZ2M0V21WRFBZTXBkNUhjcHFoN2pZR0IzWkVVM2cwZU4KMDZJQ29RS3NhNVNmeUIrUytQM0gwZThIbnVxdFVyN2UrODl3RkFEdnU3YlMyK3A4M25hYXplZXRBb0dCQU1IVQpCYnBzSGN3RFBKaUhUcXYwWHFFYnVJTEVpTGZKblh1TENEbXJiUS9qZmkwcXVDNE1aeFV1UUJYYjAweDVSbXNMCkhLdjdBWXcrcU1xOUZRanhPVitva2J2eWpXa0FEK1BUZEpGcytMVEZRdzZHZmIyemJ2d3I2d0F2cENrZmRQYmgKRTlZdUdvNDZYdzlxSUtFZ3R1TEwyMkU1NUFwRUdZNURqR2FJaUV2NUFvR0JBSTNiU2pXczVFU1VJbEh6ODNIRQpnRHI0aXhJQThkdTdLZVkwcVVRVnBxTmZLMUdPZXRnZFN4d2xOVXFicHQrMzdOTEpRNHBIbHdiZEJkYU9PcVgzCmYrRXlCdldxNnZsTE5sSlNBTWpkWE1wMmxzaVVXMjVJenpUb1loM3N5N3ZGQ3dkV29SZ0dzaTJLVC9jQnVyYkEKemp3c0ZaeG4rMFBlejNaT1FMODVydzB6Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: nginx/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: isnginx
  labels:
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: http
    - port: 443
      targetPort: 443
      name: https
  selector:
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
---
# Source: nginx/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: isnginx
  labels:
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: isnginx
      app.kubernetes.io/instance: isnginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: isnginx
        app.kubernetes.io/instance: isnginx
    spec:
      imagePullSecrets:
        - name: regcred
      initContainers:
        - image: dev.iscr.io/ideascale/init-volume:dev
          imagePullPolicy: Always
          name: init-volume
          volumeMounts:
            - mountPath: /web
              name: web-volume
      volumes:
        - name: web-volume
          persistentVolumeClaim:
            claimName: web-pvc
      containers:
        - name: isnginx
          image: ideascale/nginx:dev
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: America/Los_Angeles
            - name: APP_DOMAIN
              value: ideascale.me
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            tcpSocket:
              port: http
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: web-volume
              mountPath: /web
---
# Source: nginx/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: isnginx-ingress
  labels:
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app
                port:
                  number: 21084
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-ip
            pathType: Prefix
            backend:
              service:
                name: local-ip
                port:
                  number: 5201
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-m
            pathType: Prefix
            backend:
              service:
                name: local-m
                port:
                  number: 5202
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-mm
            pathType: Prefix
            backend:
              service:
                name: local-mm
                port:
                  number: 5203
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-c
            pathType: Prefix
            backend:
              service:
                name: local-c
                port:
                  number: 5204
    - host: "custom.ideas.li"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: isnginx
                port:
                  number: 443
  tls:
    - hosts:
        - ideascale.me
        - '*.ideascale.me'
      secretName: nginx-tls

      app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  tls.crt:ideascale.me.crt: 
  tls.key:ideascale.me.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREl5c0c4T21vd1NQZjMKNU5KMmVXanJyM1BCOGhJYTNSYjdrU3RNUDhMWDFTUE1KbDk3bk1CMGdJWUh4MkNzVlA3cm5Oa2ZQNWRBdHZCOApHcTgzNWRkbDExci9mbHNTVkxMb3kxdktJNnB4S0RsZFpTWDBPby9GSHcyK3dFbkZhbEx6QjJwaDF2cXdBbDZVCmpjdGY5R29SemlPbUt1bzh0TTIzdHQrYlZQRnNvdGM4L05zNEFFbzZWNFFyNmYraG94RmlBRjV3RWlnSDFJQ0EKeU56d0xWcndLTHVmbkVKTlIvQ3FXK2RpZkM2MXlDZVBRVTJsTUt1ajhudGRlSUh2UWYwa1JiZ29yNmNGOFd6cwp4OW9NOVU5aGtMeTVudkE5a2pGMmNNcXorWnB6Yk5uOHJINGV4T0RwemVOYTRQZ1B0WC9KVldSRkNncnYwdmc4CldDNHhQNzZ0QWdNQkFBRUNnZ0VBQVRvZitmYi9iQ0VlQnRGS3FmZXUrUFcvQnRua1cyNnJjOGtjMHgvMm9Gd0kKbG5oTGtCVlNwY09kVGhIZFdPQkNHSTJDVkNzTzBSSHRJVTBHY2hpQSt2blljQVJGS1RVRVRPRGxSRFI0bDYxdgp3RTdjYndRbW1jVkpUN2VjRzgwOUNZZ3JrY0ovRUxGTEE2eGtLRWQxbUh0Q2c0THlvSUZZV24yUEcwTm5JRXRSCnNFRTZ0YStjMHc0QkFlZ2dnb0toUmhqL2d1clRXMXhBVXhQS0FjWjczN3JYZHpDTGx3N1Y0KzlnUEg2b1UvenAKay9XdGNTRGhoZU1zZlJTTk10cWIvZUx6SnZJSk14b0dHbmFYUVJHeGhGUXZXbTR0Z1ZXNFFlVTU0K1lpeCtjagpJbnpySXBSWXlaTWs3Z2JzRjQzZ3JiMnZTbjNpL0JhcFE5RlFXdmFZTHdLQmdRRHRmNzMrdklkS0FQanByeXl6CkxFQmNmY0x2Mnp6ZVlGRWNsb3ExMDZkVDRMN1pJbkhOU1Vhb256L2RpN2RvcXpUM3RoM285WitaN2lhdDhtM3UKYVd0VEgybGkyTU10UHJXQ3Q1TmgyUHpieiszK24xM3NpSjVsbDMxWVhBTTRZK0RxK2FpYTdMbFYxd3d4NmpNbQozUDNPQ25HS05NNlpOQWRsQUgzOUlJWTZNd0tCZ1FEWWJ2NzJ2bUg3cEl1Z25lUlg0RnpGcjFVRFAreHhmRXhOCkEyc3BvSVpBYzZGZXl5UTB0Y0FkcnVUMUpjY2Z3WTFrV0MwTFVsdEhqUlRBSnZEVWRrMEQxRkdhRjkrWlZLeWEKVU9MVkdzRnMxOUdiZ3hBb0loeWxjZnBMbDR2WFZGQWs4YmtGdHJEY254cmIxbWdSYys5NXZXRWRZdVVxekZJNApleFUxQ3dFRG53S0JnRkQzQ1loOE1RcnpoZWYwaGlLVzVXSWlwWUFybDNhZ0UwYlJzM3dGS2JnWW1EZGgzTFlGClV3ZE5NdktPSFBxYjB6VFhheDd1RFhqbWpWMGpsb0orZ2M0V21WRFBZTXBkNUhjcHFoN2pZR0IzWkVVM2cwZU4KMDZJQ29RS3NhNVNmeUIrUytQM0gwZThIbnVxdFVyN2UrODl3RkFEdnU3YlMyK3A4M25hYXplZXRBb0dCQU1IVQpCYnBzSGN3RFBKaUhUcXYwWHFFYnVJTEVpTGZKblh1TENEbXJiUS9qZmkwcXVDNE1aeFV1UUJYYjAweDVSbXNMCkhLdjdBWXcrcU1xOUZRanhPVitva2J2eWpXa0FEK1BUZEpGcytMVEZRdzZHZmIyemJ2d3I2d0F2cENrZmRQYmgKRTlZdUdvNDZYdzlxSUtFZ3R1TEwyMkU1NUFwRUdZNURqR2FJaUV2NUFvR0JBSTNiU2pXczVFU1VJbEh6ODNIRQpnRHI0aXhJQThkdTdLZVkwcVVRVnBxTmZLMUdPZXRnZFN4d2xOVXFicHQrMzdOTEpRNHBIbHdiZEJkYU9PcVgzCmYrRXlCdldxNnZsTE5sSlNBTWpkWE1wMmxzaVVXMjVJenpUb1loM3N5N3ZGQ3dkV29SZ0dzaTJLVC9jQnVyYkEKemp3c0ZaeG4rMFBlejNaT1FMODVydzB6Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=
---
# Source: nginx/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: isnginx
  labels:
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: http
    - port: 443
      targetPort: 443
      name: https
  selector:
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
---
# Source: nginx/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: isnginx
  labels:
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: isnginx
      app.kubernetes.io/instance: isnginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: isnginx
        app.kubernetes.io/instance: isnginx
    spec:
      imagePullSecrets:
        - name: regcred
      initContainers:
        - image: dev.iscr.io/ideascale/init-volume:dev
          imagePullPolicy: Always
          name: init-volume
          volumeMounts:
            - mountPath: /web
              name: web-volume
      volumes:
        - name: web-volume
          persistentVolumeClaim:
            claimName: web-pvc
      containers:
        - name: isnginx
          image: ideascale/nginx:dev
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              value: America/Los_Angeles
            - name: APP_DOMAIN
              value: ideascale.me
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            tcpSocket:
              port: http
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: web-volume
              mountPath: /web
---
# Source: nginx/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: isnginx-ingress
  labels:
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: isnginx
    app.kubernetes.io/instance: isnginx
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app
                port:
                  number: 21084
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-ip
            pathType: Prefix
            backend:
              service:
                name: local-ip
                port:
                  number: 5201
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-m
            pathType: Prefix
            backend:
              service:
                name: local-m
                port:
                  number: 5202
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-mm
            pathType: Prefix
            backend:
              service:
                name: local-mm
                port:
                  number: 5203
    - host: "*.ideascale.me"
      http:
        paths:
          - path: /local-c
            pathType: Prefix
            backend:
              service:
                name: local-c
                port:
                  number: 5204
    - host: "custom.ideas.li"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: isnginx
                port:
                  number: 443
  tls:
    - hosts:
        - ideascale.me
        - '*.ideascale.me'
      secretName: nginx-tls

